<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="1" passed="1">
  <reporter-output>
    <line>
      <![CDATA[User entered Iphone product ]]>
    </line>
    <line>
      <![CDATA[User clicked on Search button ]]>
    </line>
    <line>
      <![CDATA[Sorted the results by Price-ascending order]]>
    </line>
    <line>
      <![CDATA[User clicked on Iphone title ]]>
    </line>
    <line>
      <![CDATA[Product title is :Apple iPhone 4S (Black, 8GB)]]>
    </line>
    <line>
      <![CDATA[Product price is :11,999.00]]>
    </line>
    <line>
      <![CDATA[User clicked on AddCart button ]]>
    </line>
    <line>
      <![CDATA[User clicked on Cart icon ]]>
    </line>
    <line>
      <![CDATA[Sucessfully verified your product title  ]]>
    </line>
    <line>
      <![CDATA[Sucessfully verified your product price ]]>
    </line>
    <line>
      <![CDATA[User clicked on Signout link ]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="98240" started-at="2018-02-08T05:48:26Z" finished-at="2018-02-08T05:50:04Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="98240" started-at="2018-02-08T05:48:26Z" finished-at="2018-02-08T05:50:04Z">
      <class name="com.amazon.TestScripts.TC_001">
        <test-method status="PASS" signature="preCondition()[pri:0, instance:com.amazon.TestScripts.TC_001@5ca609]" name="preCondition" is-config="true" duration-ms="10704" started-at="2018-02-08T11:18:26Z" finished-at="2018-02-08T11:18:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method status="PASS" signature="Initialize()[pri:0, instance:com.amazon.TestScripts.TC_001@5ca609]" name="Initialize" is-config="true" duration-ms="112" started-at="2018-02-08T11:18:36Z" finished-at="2018-02-08T11:18:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Initialize -->
        <test-method status="PASS" signature="ProductOrdering()[pri:0, instance:com.amazon.TestScripts.TC_001@5ca609]" name="ProductOrdering" duration-ms="87269" started-at="2018-02-08T11:18:37Z" finished-at="2018-02-08T11:20:04Z">
          <reporter-output>
            <line>
              <![CDATA[User entered Iphone product ]]>
            </line>
            <line>
              <![CDATA[User clicked on Search button ]]>
            </line>
            <line>
              <![CDATA[Sorted the results by Price-ascending order]]>
            </line>
            <line>
              <![CDATA[User clicked on Iphone title ]]>
            </line>
            <line>
              <![CDATA[Product title is :Apple iPhone 4S (Black, 8GB)]]>
            </line>
            <line>
              <![CDATA[Product price is :11,999.00]]>
            </line>
            <line>
              <![CDATA[User clicked on AddCart button ]]>
            </line>
            <line>
              <![CDATA[User clicked on Cart icon ]]>
            </line>
            <line>
              <![CDATA[Sucessfully verified your product title  ]]>
            </line>
            <line>
              <![CDATA[Sucessfully verified your product price ]]>
            </line>
            <line>
              <![CDATA[User clicked on Signout link ]]>
            </line>
          </reporter-output>
        </test-method> <!-- ProductOrdering -->
        <test-method status="FAIL" signature="tearDownMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.amazon.TestScripts.TC_001@5ca609]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2018-02-08T11:20:04Z" finished-at="2018-02-08T11:20:04Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:220)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
      </class> <!-- com.amazon.TestScripts.TC_001 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
